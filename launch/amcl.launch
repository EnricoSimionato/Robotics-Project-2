
<launch>
 
  <!-- Name of the map to use and initial position -->
  <arg name="map_file"       default="$(find Robotics-Project-2)/maps/map.yaml"/> 

  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  <arg name="odom_frame_id"   default="odom"/>
  <arg name="global_frame_id" default="map"/>

  <param name="/use_sim_time" value="true"/>


  <!--  ************** Navigation  ***************  -->
   <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find Robotics-Project-2)/cfg/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find Robotics-Project-2)/cfg/costmap_common_params.yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find Robotics-Project-2)/cfg/local_costmap_params.yaml" command="load" />   
    <rosparam file="$(find Robotics-Project-2)/cfg/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find Robotics-Project-2)/cfg/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find Robotics-Project-2)/cfg/move_base_params.yaml" command="load" /> 

    <param name="base_global_planner" value="navfn/NavfnROS" />  <!--   planner  navfn/NavfnROS alternative  carrot_planner/CarrotPlanner -->
    <param name="planner_frequency" value="1.0" />
    <param name="planner_patience" value="5.0" /> <!-- How long the planner will wait in seconds in an attempt to find a valid plan before space-clearing operations are performed.  -->

    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <param name="controller_frequency" value="5.0" />
    <param name="controller_patience" value="5.0" /> <!-- How long the controller will wait in seconds without receiving a valid control before space-clearing operations are performed.  -->

    <param name="clearing_rotation_allowed" value="true"/> 
  </node>


  <!--  ****** Maps *****  -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)">
    <param name="frame_id" value="map"/>
  </node>


  <!--  ****** amcl *****  -->
  <include file="$(find Robotics-Project-2)/config/amcl.launch.xml">
    <arg name="scan_topic" value="scan"/>
    <arg name="use_map_topic" value="true"/>
    <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
    <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
    <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
  </include>

<!-- **************  scan_merger, combines data from different sensors**************  -->
  <include file="$(find Robotics-Project-2)/launch/scan_merger.launch"/> 

 <!--  ************** add odom tf  ***************  -->
   <node pkg="Robotics-Project-2" type="odom_tf" respawn="false" name="odom_tf" output="screen"/>
   

<node pkg="tf" type="static_transform_publisher" name="footprint_to_map" args="0.0 0.0 0.0 0.0 0.0 0.0 base_footprint map 100" />
<node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0.0 0.0 0.0 0.0 0.0 0.0 map odom 100" />

  <!--  **************** Visualisation ****************  -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find Robotics-Project-2)/rviz/rviz.rviz"/>
</launch>
